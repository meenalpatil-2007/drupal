<?php

/**
 * Implements of hook_services_resources().
 */
function editProfile_services_resources() {
	
  $definition = array(
    'editProfile' => array(
      'operations' => array(
        'retrieve' => array(
          'help' => 'Retrieve a editProfile',
          'callback' => '_editProfile_resource_retrieve',
          'access callback' => '_editProfile_resource_access',
          'access arguments' => array('view'),
          'access arguments append' => TRUE,
          'args' => array(
            array(
              'name' => 'profile',
              'type' => 'array',
              'description' => 'The uid of the editProfile to retrieve.',
              'source' => array('path' => 0),
              'optional' => FALSE,
            ),
          ),
        ),

        'create' => array(
          'help' => 'Create a editProfile',
          'callback' => '_editProfile_resource_create',
          'access callback' => '_editProfile_resource_access',
          'access arguments' => array('create'),
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'account',
              'type' => 'array',
              'description' => 'The editProfile object',
              'source' => 'data',
              'optional' => FALSE,
            ),
          ),
        ),
		'delete' => array(
          'help' => 'Delete a profile',
          'callback' => '_editProfile_resource_delete',
          'access callback' => '_editProfile_resource_access',
          'access arguments' => array('edit'),
          'access arguments append' => TRUE,
          'args' => array(
            array(
              'name' => 'uid',
              'type' => 'int',
              'description' => 'The id of the comment to delete',
              'source' => array('path' => '0'),
              'optional' => FALSE,
            ),
          ),
        ),
        'index' => array(
          'help' => 'List all editProfiles',
          'callback' => '_editProfile_resource_index',
          'args' => array(
            array(
              'name' => 'page',
              'optional' => TRUE,
              'type' => 'int',
              'description' => 'The zero-based index of the page to get, defaults to 0.',
              'default value' => 0,
              'source' => array('param' => 'page'),
            ),
            array(
              'name' => 'fields',
              'optional' => TRUE,
              'type' => 'string',
              'description' => 'The fields to get.',
              'default value' => '*',
              'source' => array('param' => 'fields'),
            ),
            array(
              'name' => 'parameters',
              'optional' => TRUE,
              'type' => 'array',
              'description' => 'Parameters',
              'default value' => array(),
              'source' => array('param' => 'parameters'),
            ),
            array(
              'name' => 'pagesize',
              'optional' => TRUE,
              'type' => 'int',
              'description' => 'Number of records to get per page.',
              'default value' => variable_get('services_editProfile_index_page_size', 20),
              'source' => array('param' => 'pagesize'),
            ),
          ),
          'access arguments' => array('access editProfile profiles'),
          'access arguments append' => FALSE,
        ),
      ),     
    ),
  );

  $definition['editProfile']['actions']['register'] = array_merge($definition['editProfile']['operations']['create'], array(
    'help' => 'Register a editProfile',
  ));

  return $definition;
	
}

function _editProfile_resource_retrieve($uid){
	//print_r($_REQUEST);
	return $res = _editProfile_resource_delete($_REQUEST['uid']);
	 
}

function _editProfile_resource_access(){
	return true;
}

function _editProfile_resource_delete($uid){

	//print_r($_REQUEST);
	//echo $uid; exit;	
		
	$query = db_update('users')->fields(array('status' => 0))->condition('uid', $uid, '=')->execute();
	$result = db_truncate('cache_field')->execute();
	
	if($query){
		$response['msg'] = 'Profile deleted successfully';			
		db_cache_clear_all();		
		$respo = json_encode($response);
		return $respo;
	}
		
}


function _editProfile_resource_create($arg1){
	
	$result = get_pid($arg1['uid']);
	$data = $arg1;
	//print_r($arg1);
	unset($data['uid']);
	unset($data['field__token']);
	//unset($data['field_profile_img']);
	//print_r($data);
	if($result['pid']){
		
		foreach($data as $key=>$value){
			
			$table = 'field_data_'.$key;
			$field = $key.'_value';
			$pid = $result['pid'];
			
			if($field == 'field_birth_date_value'){				
				$value = date('Y-m-d H:i:s', strtotime($value));
				//echo $value;exit;
			}
			
			//echo $table ." ". $field ." ". $value. '<br/>';
			
			$sql = db_update($table)->fields(array($field => $value))->condition('entity_id', $pid, '=')->condition('revision_id', $pid, '=')->execute();
			///echo $sql;
			if($sql){
				$table = 'field_revision_'.$key;
				$sql1 = db_update($table)->fields(array($field => $value))->condition('entity_id', $pid, '=')->condition('revision_id', $pid, '=')->execute(); 		
				$result = db_truncate('cache_field')->execute();				
			}
			
			//echo $sql1; 		
		} 	//exit; 
		
		$response = array('msg' => 'Profile updated successfully', 'pid' => $pid);

	}else{
		
		$res = create_profile($arg1['uid']);
		if($res){
			$pData = get_pid($arg1['uid']);
		}
		$pid = $pData['pid'];
		foreach ($data as $key=>$value){
						
			$table = 'field_data_'.$key;
			$field = $key.'_value';
			if($field == 'field_birth_date_value'){
				$date = date_create($value);
				$value = date_format($date, 'Y-m-d H:i:s');
			}
			
			$con = db_insert($table)->fields(array(			
						'entity_type' => 'profile2',
						'bundle' => 'main',
						'deleted' => 0,
						'entity_id' =>	$pid,
						'revision_id' => $pid,
						'language' => 'und',
						'delta' => 0,
						$field => $value,			
					))->execute();
					
			//if(!$con){
				
				$table = 'field_revision_'.$key;
				$con1 = db_insert($table)->fields(array(			
						'entity_type' => 'profile2',
						'bundle' => 'main',
						'deleted' => 0,
						'entity_id' => $pid,
						'revision_id' => $pid,
						'language' => 'und',
						'delta' => 0,
						$field => $value,			
					))->execute();
					$result = db_truncate('cache_field')->execute();
			//}
		
		}
		
		$response = array('msg' => 'Profile added successfully', 'pid' => $pid);
	}
	db_cache_clear_all();
	
	$respo = json_encode($response);
	return $respo;
}


function db_cache_clear_all(){
	
	$result = db_truncate('cache')->execute();
	$result = db_truncate('cache_block')->execute();
	$result = db_truncate('cache_bootstrap')->execute();
	$result = db_truncate('cache_field')->execute();
	$result = db_truncate('cache_filter')->execute();
	$result = db_truncate('cache_form')->execute();
	$result = db_truncate('cache_image')->execute();
	$result = db_truncate('cache_menu')->execute();
	$result = db_truncate('cache_page')->execute();
	$result = db_truncate('cache_path')->execute();
	$result = db_truncate('cache_token')->execute();
	$result = db_truncate('cache_update')->execute();
	$result = db_truncate('cache_views')->execute();
	$result = db_truncate('cache_views_data')->execute();
	$result = db_truncate('cache_panels')->execute();
	$result = db_truncate('cache_libraries')->execute();
	return true;
	
} 

function create_profile($uid){   
	$res = db_insert('profile')->fields(array(		
			'type' => 'main',
			'uid' => $uid,
			'label' => 'Main profile',
			'created' => REQUEST_TIME,
			'changed' => REQUEST_TIME,
		))->execute();

	return $res;	
}

function get_pid($uid){	
	$result = db_select('profile', 'p')->fields('p')->condition('uid' , $uid, '=')->execute()->fetchAssoc();
	return $result;
	
}
?>