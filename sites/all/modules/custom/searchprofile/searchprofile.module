<?php

function searchprofile_menu() {
	$items = array();
	$items['list'] = array(
		'title' => 'searchprofile',
		'description' => 'searchprofile',
		'page callback' => 'get_search',
		'access callback' => TRUE,
		'access arguments' => array('access content'),
	);
	return $items;
}

function get_search() {
	var_dump($GLOBALS['user']->uid);
	//$types = profile2_get_types();	//gets all profile types
	//$pr = profile2_load_by_user($GLOBALS['user']->uid, 'main');
	$pr = profile2_load_by_user(3,'main');
	var_dump($pr);
}

function searchprofile_views_query_alter(&$view, &$query) {

	if ($view->name == 'profile_list') {
		
		list($logged_in, $pr, $join) = getJoinobj('field_data_field_gender');
        $query->add_relationship('field_data_field_gender', $join, 'profile');

		$view->query->add_where(0, db_and()->condition('field_data_field_gender.field_gender_value', $pr->field_looking_for['und']['0']['value'], '='));

		$view->query->add_where(0, db_and()->condition('profile.uid', $logged_in, '!='));
	}

	if($view->name == 'test3') {
		list($logged_in, $pr, $join) = getJoinobj('field_data_field_gender');
		$view->query->add_where(0, db_and()->condition('profile.uid', $logged_in, '!='));	
	}

	if ($view->name == '_RecommendedMatches') {

		list($logged_in, $pr, $join) = getJoinobj(['field_data_field_age','field_data_field_gender', 																'field_data_field_height_inches']);

		$partnerheightInRange = explode("-", $pr->field_partner_height['und']['0']['value']);
		$heightInInches[] = convertFtTOInches($partnerheightInRange[0]);
		$heightInInches[] = convertFtTOInches($partnerheightInRange[1]);
		
		$ageRange = explode("-", $pr->field_partner_age['und']['0']['value']);
		
        $query->add_relationship('field_data_field_age', $join, 'profile');
        $query->add_relationship('field_data_field_height_inches', $join, 'profile');
        $query->add_relationship('field_data_field_gender', $join, 'profile');

		$view->query->add_where(0, db_and()->condition('field_data_field_age.field_age_value', $ageRange, 'BETWEEN'));

		$view->query->add_where(0, db_and()
      	->condition('field_data_field_height_inches.field_height_inches_value', $heightInInches, 'BETWEEN'));
		
		$view->query->add_where(0, db_and()->condition('field_data_field_gender.field_gender_value', $pr->field_looking_for['und']['0']['value'], '='));
	}
}

function searchprofile_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if($form['#id'] == 'views-exposed-form--RecommendedMatches-block') {
    unset($form['sort_by']);
  }

}

function getJoinobj($tableName) {
	$logged_in = $GLOBALS['user']->uid;
	$pr = profile2_load_by_user($logged_in,'main');
	$join = new views_join();

	if (is_array($tableName)) {
		$join->tables = $tableName;
	}
	else {
		$join->table = $tableName;
	}

	$join->field = 'entity_id';
	$join->left_table = 'profile';
	$join->left_field = 'pid';
	$join->type = 'inner';

	return array($logged_in, $pr, $join);
}

function convertFtTOInches($height) {
	if (strpos($height, ".")) {
		$heightInFoot = explode(".", $height);
		$heightInInches = ($heightInFoot[0]*12) + $heightInFoot[1];
	}
	else {
		$heightInInches = ($height*12);
	}
	
	return $heightInInches;
}
